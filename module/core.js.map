{"version":3,"sources":["../src/core.js"],"names":["Emitter","constructor","events","handlers","on","names","hanlder","Array","split","forEach","name","Error","push","trigger","params","reduce","r","e","bind","exist","isArray","Events","warn","console","error","componentregister","destroy","Validator","isValidData","data","id","isValidId","nodes","Object","test","validate","id1","id2","msg","success","Boolean","length","join","Context","plugins","Map","components","use","plugin","options","has","install","set","register","component"],"mappings":"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","sourcesContent":["export class Emitter {\n    events = {};\n    silent = false;\n\n    constructor(events) {\n        this.events = events instanceof Emitter ? events.events : events.handlers;\n\n    }\n\n    on(names, hanlder) {\n        const events = names instanceof Array ? names : names.split(' ');\n\n        events.forEach(name => {\n            if (!this.events[name])\n                throw new Error('The event ${name} does not exist');\n            this.events[name].push(hanlder);\n\n        });\n    }\n\n    trigger(name, params = {}) {\n        if (!(name in this.events))\n            throw new Error(`The event ${name} cannot be triggered`);\n\n        return this.events[name].reduce((r, e) => {\n            return (e(params) !== false) && r\n        }, true);\n    }\n\n    bind(name) {\n        if (this.events[name])\n            throw new Error(`The event ${name} is already bound`);\n\n        this.events[name] = [];\n    }\n\n    exist(name) {\n        return Array.isArray(this.events[name]);\n    }\n}\n\nexport class Events {\n    handlers = {};\n\n    constructor(handlers = {}) {\n        this.handlers = {\n            warn: [console.warn],\n            error: [console.error],\n            componentregister: [],\n            destroy: [],\n            ...handlers\n        }\n    }\n}\n\n\nexport class Validator {\n\n    static isValidData(data) {\n        return typeof data.id === 'string' &&\n            this.isValidId(data.id) &&\n            data.nodes instanceof Object && !(data.nodes instanceof Array);\n    }\n\n    static isValidId(id) {\n        return /^[\\w-]{3,}@[0-9]+\\.[0-9]+\\.[0-9]+$/.test(id);\n    }\n\n    static validate(id, data) {\n        const id1 = id.split('@');\n        const id2 = data.id.split('@');\n        let msg = [];\n\n        if (!this.isValidData(data))\n            msg.push('Data is not suitable');\n        if (id !== data.id)\n            msg.push('IDs not equal');\n        if (id1[0] !== id2[0])\n            msg.push('Names don\\'t match');\n        if (id1[1] !== id2[1])\n            msg.push('Versions don\\'t match');\n\n        return { success: Boolean(!msg.length), msg: msg.join('. ') };\n    }\n}\n\n\nexport class Context extends Emitter {\n    constructor(id, events) {\n        super(events);\n\n        if (!Validator.isValidId(id)) {\n            throw new Error('ID should be valid to name@0.1.0 format');\n        }\n\n        this.id = id;\n        this.plugins = new Map();\n        this.components = new Map();\n    }\n\n    use(plugin, options) {\n        if (plugin.name && this.plugins.has(plugin.name)) throw new Error(`Plugin ${plugin.name} already in use`)\n\n        plugin.install(this, options || {});\n        this.plugins.set(plugin.name, options)\n    }\n\n    register(component) {\n        if (this.components.has(component.name))\n            throw new Error(`Component ${component.name} already registered`);\n\n        this.components.set(component.name, component);\n        this.trigger('componentregister', component);\n    }\n\n    destroy() {\n        this.trigger('destroy');\n    }\n}\n"],"file":"core.js"}