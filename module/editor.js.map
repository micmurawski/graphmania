{"version":3,"sources":["../src/editor.js"],"names":["Context","Validator","EditorEvents","Node","Selected","EditorView","listenWindow","Component","NodeEditor","constructor","id","container","view","components","on","e","trigger","node","accumulate","selectNode","selected","each","n","nodeView","nodes","get","onStart","dx","dy","onDrag","addNode","push","removeNode","getConnections","forEach","c","removeConnection","splice","indexOf","connect","output","input","data","connection","connectTo","addConnection","remove","Error","add","getComponent","name","component","register","editor","clear","toJSON","beforeImport","json","checking","validate","success","msg","silent","afterImport","fromJSON","Promise","all","Object","keys","map","build","jsonNode","outputs","key","outputJson","connections","jsonConnection","nodeId","targetOutput","targetInput","inputs"],"mappings":"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","sourcesContent":["import { Context, Validator } from './core.js';\nimport { EditorEvents } from './events.js';\nimport { Node } from './node.js';\nimport { Selected } from './selected.js';\nimport { EditorView } from './view/index.js';\nimport { listenWindow } from './view/utils.js';\nimport { Component } from './component.js';\n\n\nexport class NodeEditor extends Context {\n\n    nodes = [];\n    selected = new Selected();\n    view;\n\n    constructor(id, container) {\n        super(id, new EditorEvents());\n\n        this.view = new EditorView(container, this.components, this);\n\n        this.on('destroy', listenWindow('keydown', e => this.trigger('keydown', e)));\n        this.on('destroy', listenWindow('keyup', e => this.trigger('keyup', e)));\n\n        this.on('selectnode', ({ node, accumulate }) => this.selectNode(node, accumulate));\n        this.on('nodeselected', () => this.selected.each(n => {\n            const nodeView = this.view.nodes.get(n);\n\n            nodeView && nodeView.onStart()\n        }));\n        this.on('translatenode', ({ dx, dy }) => this.selected.each(n => {\n            const nodeView = this.view.nodes.get(n);\n\n            nodeView && nodeView.onDrag(dx, dy)\n        }));\n    }\n\n    addNode(node) {\n        if (!this.trigger('nodecreate', node)) return;\n\n        this.nodes.push(node);\n        this.view.addNode(node);\n\n        this.trigger('nodecreated', node);\n    }\n\n    removeNode(node) {\n        if (!this.trigger('noderemove', node)) return;\n\n        node.getConnections().forEach(c => this.removeConnection(c));\n\n        this.nodes.splice(this.nodes.indexOf(node), 1);\n        this.view.removeNode(node);\n\n        this.trigger('noderemoved', node);\n    }\n\n    connect(output, input, data = {}) {\n        if (!this.trigger('connectioncreate', { output, input })) return;\n\n        try {\n            const connection = output.connectTo(input);\n\n            connection.data = data;\n            this.view.addConnection(connection);\n\n            this.trigger('connectioncreated', connection);\n        } catch (e) {\n            this.trigger('warn', e)\n        }\n    }\n\n    removeConnection(connection) {\n        if (!this.trigger('connectionremove', connection)) return;\n\n        this.view.removeConnection(connection);\n        connection.remove();\n\n        this.trigger('connectionremoved', connection);\n    }\n\n    selectNode(node, accumulate = false) {\n        if (this.nodes.indexOf(node) === -1)\n            throw new Error('Node not exist in list');\n\n        if (!this.trigger('nodeselect', node)) return;\n\n        this.selected.add(node, accumulate);\n\n        this.trigger('nodeselected', node);\n    }\n\n    getComponent(name) {\n        const component = this.components.get(name);\n\n        if (!component)\n            throw `Component ${name} not found`;\n\n        return component;\n    }\n\n    register(component) {\n        super.register(component)\n        component.editor = this;\n    }\n\n    clear() {\n        [...this.nodes].forEach(node => this.removeNode(node));\n        this.trigger('clear');\n    }\n\n    toJSON() {\n        const data = { id: this.id, nodes: {} };\n\n        this.nodes.forEach(node => data.nodes[node.id] = node.toJSON());\n        this.trigger('export', data);\n        return data;\n    }\n\n    beforeImport(json) {\n        const checking = Validator.validate(this.id, json);\n\n        if (!checking.success) {\n            this.trigger('warn', checking.msg);\n            return false;\n        }\n\n        this.silent = true;\n        this.clear();\n        this.trigger('import', json);\n        return true;\n    }\n\n    afterImport() {\n        this.silent = false;\n        return true;\n    }\n\n    async fromJSON(json) {\n        if (!this.beforeImport(json)) return false;\n        const nodes = {};\n\n        try {\n            await Promise.all(Object.keys(json.nodes).map(async id => {\n                const node = json.nodes[id];\n                const component = this.getComponent(node.name);\n                //console.log(component)\n                //throw new Error(component)\n\n\n                nodes[id] = await component.build(Node.fromJSON(node));\n                this.addNode(nodes[id]);\n            }));\n\n            Object.keys(json.nodes).forEach(id => {\n                const jsonNode = json.nodes[id];\n                const node = nodes[id];\n\n                Object.keys(jsonNode.outputs).forEach(key => {\n                    const outputJson = jsonNode.outputs[key];\n\n                    outputJson.connections.forEach(jsonConnection => {\n                        const nodeId = jsonConnection.node;\n                        const data = jsonConnection.data;\n                        const targetOutput = node.outputs.get(key);\n                        const targetInput = nodes[nodeId].inputs.get(jsonConnection.input);\n\n                        if (!targetOutput || !targetInput) {\n                            return this.trigger('error', `IO not found for node ${node.id}`);\n                        }\n\n                        this.connect(targetOutput, targetInput, data);\n                    });\n                });\n\n            });\n        } catch (e) {\n            this.trigger('warn', e);\n            return !this.afterImport();\n        }\n\n        return this.afterImport();\n    }\n}"],"file":"editor.js"}