{"version":3,"sources":["../../src/view/index.js"],"names":["Area","ConnectionView","Emitter","NodeView","listenWindow","EditorView","constructor","container","components","emitter","Map","style","overflow","addEventListener","click","bind","e","trigger","view","on","resize","nodes","forEach","destroy","updateConnections","area","appendChild","el","addNode","node","component","get","name","Error","nodeView","set","removeNode","delete","removeChild","addConnection","connection","input","output","viewInput","viewOutput","connView","connections","removeConnection","getConnections","conn","update","parentElement","width","clientWidth","height","clientHeight","target"],"mappings":"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","sourcesContent":["import { Area } from './area.js';\nimport { ConnectionView } from './connection.js';\nimport { Emitter } from '../core.js';\nimport { NodeView } from './node.js';\nimport { listenWindow } from './utils.js';\n\n\nexport class EditorView extends Emitter {\n\n    container;\n    components;\n    nodes = new Map();\n    connections = new Map();\n    area;\n\n    constructor(container, components, emitter) {\n        super(emitter);\n\n        this.container = container;\n        this.components = components;\n\n        this.container.style.overflow = 'hidden';\n\n        this.container.addEventListener('click', this.click.bind(this));\n        this.container.addEventListener('contextmenu', e => this.trigger('contextmenu', { e, view: this }));\n        emitter.on('destroy', listenWindow('resize', this.resize.bind(this)));\n        emitter.on('destroy', () => this.nodes.forEach(view => view.destroy()));\n\n        this.on('nodetranslated', this.updateConnections.bind(this));\n\n        this.area = new Area(container, this);\n        this.container.appendChild(this.area.el);\n    }\n\n    addNode(node) {\n        const component = this.components.get(node.name);\n\n        if (!component) throw new Error(`Component ${node.name} not found`);\n\n        const nodeView = new NodeView(node, component, this);\n\n        this.nodes.set(node, nodeView);\n        this.area.appendChild(nodeView.el);\n    }\n\n    removeNode(node) {\n        const nodeView = this.nodes.get(node);\n\n        this.nodes.delete(node);\n        if (nodeView) {\n            this.area.removeChild(nodeView.el);\n            nodeView.destroy();\n        }\n    }\n\n    addConnection(connection) {\n        if (!connection.input.node || !connection.output.node)\n            throw new Error('Connection input or output not added to node');\n\n        const viewInput = this.nodes.get(connection.input.node);\n        const viewOutput = this.nodes.get(connection.output.node);\n\n        if (!viewInput || !viewOutput)\n            throw new Error('View node not found for input or output');\n\n        const connView = new ConnectionView(connection, viewInput, viewOutput, this);\n\n        this.connections.set(connection, connView);\n        this.area.appendChild(connView.el);\n    }\n\n    removeConnection(connection) {\n        const connView = this.connections.get(connection);\n\n        this.connections.delete(connection);\n        if (connView)\n            this.area.removeChild(connView.el);\n    }\n\n    updateConnections({ node }) {\n        node.getConnections().forEach(conn => {\n            let connView = this.connections.get(conn);\n\n            if (!connView) throw new Error('Connection view not found');\n\n            connView.update();\n        });\n    }\n\n    resize() {\n        const { container } = this;\n\n        if (!container.parentElement)\n            throw new Error('Container doesn\\'t have parent element');\n\n        const width = container.parentElement.clientWidth;\n        const height = container.parentElement.clientHeight;\n\n        container.style.width = width + 'px';\n        container.style.height = height + 'px';\n    }\n\n    click(e) {\n        const container = this.container;\n\n        if (container !== e.target) return;\n        if (!this.trigger('click', { e, container })) return;\n    }\n}"],"file":"index.js"}