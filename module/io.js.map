{"version":3,"sources":["../src/io.js"],"names":["IO","constructor","key","name","socket","multiConns","node","multipleConnections","connections","removeConnection","connection","splice","indexOf","removeConnections","forEach","Output","title","hasConnection","length","connectTo","input","compatibleWith","Error","Connection","push","connectedTo","some","item","toJSON","map","c","id","data","Input","addConnection","addControl","control","parent","showControl","output","remove"],"mappings":"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","sourcesContent":["export class IO {\n\n    node = null;\n    multipleConnections;\n    connections;\n\n    key;\n    name;\n    socket;\n\n    constructor(key, name, socket, multiConns) {\n        this.node = null;\n        this.multipleConnections = multiConns;\n        this.connections = [];\n\n        this.key = key;\n        this.name = name;\n        this.socket = socket;\n    }\n\n    removeConnection(connection) {\n        this.connections.splice(this.connections.indexOf(connection), 1);\n    }\n\n    removeConnections() {\n        this.connections.forEach(connection => this.removeConnection(connection));\n    }\n}\n\nexport class Output extends IO {\n\n    constructor(key, title, socket, multiConns = true) {\n        super(key, title, socket, multiConns);\n    }\n\n    hasConnection() {\n        return this.connections.length > 0;\n    }\n\n    connectTo(input) {\n        if (!this.socket.compatibleWith(input.socket))\n            throw new Error('Sockets not compatible');\n        if (!input.multipleConnections && input.hasConnection())\n            throw new Error('Input already has one connection');\n        if (!this.multipleConnections && this.hasConnection())\n            throw new Error('Output already has one connection');\n\n        const connection = new Connection(this, input);\n\n        this.connections.push(connection);\n        return connection;\n    }\n\n    connectedTo(input) {\n        return this.connections.some((item) => {\n            return item.input === input;\n        });\n    }\n\n    toJSON() {\n        return {\n            'connections': this.connections.map(c => {\n                if (!c.input.node) throw new Error('Node not added to Input');\n\n                return {\n                    node: c.input.node.id,\n                    input: c.input.key,\n                    data: c.data\n                }\n            })\n        };\n    }\n}\n\nexport class Input extends IO {\n\n    control = null;\n\n    constructor(key, title, socket, multiConns = false) {\n        super(key, title, socket, multiConns);\n    }\n\n    hasConnection() {\n        return this.connections.length > 0;\n    }\n\n    addConnection(connection) {\n        if (!this.multipleConnections && this.hasConnection())\n            throw new Error('Multiple connections not allowed');\n        this.connections.push(connection);\n    }\n\n    addControl(control) {\n        this.control = control;\n        control.parent = this;\n    }\n\n    showControl() {\n        return !this.hasConnection() && this.control !== null;\n    }\n\n    toJSON() {\n        return {\n            'connections': this.connections.map(c => {\n                if (!c.output.node) throw new Error('Node not added to Output');\n\n                return {\n                    node: c.output.node.id,\n                    output: c.output.key,\n                    data: c.data\n                };\n            })\n        };\n    }\n}\n\nexport class Connection {\n\n    output;\n    input;\n    data = {};\n\n    constructor(output, input) {\n        this.output = output;\n        this.input = input;\n        this.data = {};\n\n        this.input.addConnection(this);\n    }\n\n    remove() {\n        this.input.removeConnection(this);\n        this.output.removeConnection(this);\n    }\n}"],"file":"io.js"}